# Generated by Django 5.2.5 on 2025-08-09 23:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('spot_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=20)),
                ('price_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_spots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parking_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.parkingspot')),
            ],
        ),
        migrations.CreateModel(
            name='SpotAvailabilityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_available', models.BooleanField()),
                ('parking_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_logs', to='parking.parkingspot')),
            ],
        ),
        migrations.CreateModel(
            name='SpotReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=5)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parking_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='parking.parkingspot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpotPredictionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.FloatField()),
                ('predicted_for_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parking_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='parking.parkingspot')),
            ],
            options={
                'indexes': [models.Index(fields=['parking_spot', 'predicted_for_time'], name='parking_spo_parking_e97d66_idx')],
            },
        ),
    ]
